---
- name: Install Kubernetes Worker Nodes
  hosts: all  # Will apply to any machine it runs on
  become: yes
  tasks:
    - name: Update System Packages
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
          - gnupg
        state: present

    - name: Add Kubernetes GPG Key and Repository
      shell: |
        sudo mkdir -p -m 755 /etc/apt/keyrings
        curl -fsSLo /etc/apt/keyrings/kubernetes-apt-keyring.gpg https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Enable and Start Docker Service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install Kubernetes Components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes Packages (Prevent Accidental Updates)
      shell: |
        apt-mark hold kubelet kubeadm kubectl

    - name: Disable Swap (Kubernetes Requirement)
      shell: |
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab

    - name: Enable and Start Kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Get Join Command from Master
      shell: ssh -o StrictHostKeyChecking=no ubuntu@{{ lookup('env', 'K8S_MASTER_IP') }} "kubeadm token create --print-join-command"
      register: join_command
      delegate_to: localhost

    - name: Join Worker Node to Kubernetes Cluster
      shell: "{{ join_command.stdout }}"
