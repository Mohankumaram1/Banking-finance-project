---
- name: Kubernetes Node Installation and Deployment
  hosts: all
  become: true
  tasks:

    - name: Update apt packages
      apt:
        update_cache: yes

    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
          - gnupg
        state: present

    - name: Add Kubernetes repository & GPG key
      shell: |
        sudo mkdir -p -m 755 /etc/apt/keyrings
        curl -fsSLo /etc/apt/keyrings/kubernetes-apt-keyring.gpg https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install Kubernetes packages (kubelet, kubeadm, kubectl)
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Disable swap (Kubernetes requirement)
      shell: |
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab

- name: Configure Kubernetes Master
  hosts: all
  become: true
  tasks:
    
    - name: Initialize Kubernetes Master
      shell: kubeadm init --pod-network-cidr=192.168.1.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Setup kubeconfig for root user (Master)
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install Calico network plugin
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Get join command for worker nodes
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command to file
      copy:
        content: "{{ join_command.stdout }}"
        dest: /tmp/k8s_join_command.sh
        mode: '0644'

- name: Configure Kubernetes Worker Nodes
  hosts: all
  become: true
  tasks:

    - name: Copy join command from master
      fetch:
        src: /tmp/k8s_join_command.sh
        dest: /tmp/k8s_join_command.sh
        flat: yes

    - name: Join Worker Nodes to Cluster
      shell: "sh /tmp/k8s_join_command.sh"
      args:
        creates: /etc/kubernetes/kubelet.conf


