- name: Setup Kubernetes Worker Node
  hosts: all
  become: true
  tasks:

    - name: Update apt package list
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
          - gnupg
        state: present

    - name: Download and install Docker
      get_url:
        url: https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installDocker.sh
        dest: /tmp/installDocker.sh
        mode: '0755'

    - name: Execute Docker installation script
      command: bash /tmp/installDocker.sh

    - name: Restart Docker service
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: Download and install CRI-Dockerd
      get_url:
        url: https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installCRIDockerd.sh
        dest: /tmp/installCRIDockerd.sh
        mode: '0755'

    - name: Execute CRI-Dockerd installation script
      command: bash /tmp/installCRIDockerd.sh

    - name: Restart CRI-Docker service
      systemd:
        name: cri-docker
        state: restarted
        enabled: yes

    - name: Download and install Kubernetes components
      get_url:
        url: https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installK8S.sh
        dest: /tmp/installK8S.sh
        mode: '0755'

    - name: Execute Kubernetes installation script
      command: bash /tmp/installK8S.sh

    - name: Disable swap (required for Kubernetes)
      command: swapoff -a

    - name: Remove swap entry from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^.*\sswap\s.*$'
        replace: '# swap disabled'

    - name: Fetch Kubernetes join command from master node
      shell: "ssh -o StrictHostKeyChecking=no ubuntu@{{ groups['master'][0] }} 'kubeadm token create --print-join-command'"
      register: join_command
      delegate_to: localhost

    - name: Print join command (for debugging)
      debug:
        msg: "{{ join_command.stdout }}"

    - name: Join worker node to Kubernetes cluster
      shell: "{{ join_command.stdout }}"
